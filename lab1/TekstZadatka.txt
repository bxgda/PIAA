### 1.
Припремити фајлове са текстом за тражење подстрингови. Фајлови треба да имају 100, 1000, 10 000 и 100 000 речи. Припремити фајлове са смисленим текстом написаним карактерима ASCII табеле (највише 256 различитих знакова) и фајлове који се састоје само из хексадекадних цифара. Извршити претрагу подстрингова дужине 5, 10, 20 и 50 карактера у свим креираним фајловима. Упоредити перформансе алгоритама за све наведене случајеве по времену извршења. Резултате поређења предати уз пројекат у форми извештаја. Сваки студент имплементира два алгоритма:

Студенти са парним бројем индекса врше тражење подстринга у тексту Rabin-Karp алгоритмом, док студенти са непарним бројем индекса треба да користе Knut-Moris-Prat.

## 2.
Студенти чија је сума цифара броја индекса паран број треба да имплементирају Levenstein алгоритам за тражење речи које су погрешно написане. У креираним фајловима (са ASCII и хексадекадном азбуком) извршити тражење стрингова приближне дужине 5, 10 и 20 карактера и приказати пронађене стрингове који су на удаљености већој од 0 и мањој од 20% дужине стринга који се тражи. 

Студенти чија је сума цифара броја индекса непаран број треба да имплементирају SoundEx алгоритам за тражење речи које су потенцијално погрешно написане. У креираним фајловима са ASCII азбуком извршити тражење стрингова приближне дужине 5, 10 и 20 карактера и приказати пронађене стрингове који имају исти код, али не представљају исте речи. 